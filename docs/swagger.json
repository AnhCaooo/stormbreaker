{
    "swagger": "2.0",
    "info": {
        "description": "Service for retrieving information about market electric price in Finland",
        "title": "Stormbreaker API (electric service)",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Anh Cao",
            "email": "anhcao4922@gmail.com"
        },
        "version": "1.0.0"
    },
    "host": "localhost:5001",
    "basePath": "/",
    "paths": {
        "/v1/market-price": {
            "post": {
                "description": "Fetch the market spot price of electric in Finland in any times",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "market-price"
                ],
                "summary": "Retrieves the market price",
                "parameters": [
                    {
                        "description": "Criteria for getting market spot price",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PriceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PriceResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthenticated/Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "various reasons: cannot fetch price from 3rd party, failed to read settings from db, etc.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/market-price/today-tomorrow": {
            "get": {
                "description": "Returns the exchange price for today and tomorrow.\nIf tomorrow price is not available yet, return empty struct.\nThen client needs to show readable information to indicate that data is not available yet.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "market-price"
                ],
                "summary": "Retrieves the market price for today and tomorrow",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TodayTomorrowPrice"
                        }
                    },
                    "401": {
                        "description": "Unauthenticated/Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "various reasons: cannot fetch price from 3rd party, failed to read settings from db, etc.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/price-settings": {
            "get": {
                "description": "retrieves the price settings for specific user by identify through 'access token'.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "price-settings"
                ],
                "summary": "Retrieves the price settings for specific user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PriceSettings"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new price settings for new user by identify through 'access token'.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "price-settings"
                ],
                "summary": "Creates a new price settings for user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the price settings for specific user by identify through 'access token'.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "price-settings"
                ],
                "summary": "Deletes the price settings for specific user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates the price settings for specific user by identify through 'access token'.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "price-settings"
                ],
                "summary": "Updates the price settings for specific user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.DailyPrice": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "boolean"
                },
                "prices": {
                    "$ref": "#/definitions/models.PriceSeries"
                }
            }
        },
        "models.Data": {
            "type": "object",
            "properties": {
                "includeVat": {
                    "description": "IncludeVat is legacy property that return string value and value \"0\" means no VAT included and string \"1\" is included",
                    "type": "string",
                    "enum": [
                        "0",
                        "1"
                    ],
                    "example": "1"
                },
                "isToday": {
                    "description": "IsToday indicates whether the current time is today or not",
                    "type": "boolean",
                    "example": false
                },
                "orig_time": {
                    "description": "the current time where server is located",
                    "type": "string",
                    "example": "2024-12-09 00:00:00"
                },
                "price": {
                    "description": "the price of specified time range",
                    "type": "number",
                    "example": 2.47
                },
                "time": {
                    "description": "the current time.",
                    "type": "string",
                    "example": "2024-12-09 00:00:00"
                },
                "time_utc": {
                    "description": "timestamp in UTC format",
                    "type": "string",
                    "example": "2024-12-08 22:00:00"
                },
                "vat_factor": {
                    "description": "amount of VAT that applies to electric price.",
                    "type": "number",
                    "example": 1.255
                }
            }
        },
        "models.PriceData": {
            "type": "object",
            "properties": {
                "group": {
                    "description": "Group represents 'hour', 'day', 'week', 'month', 'year'",
                    "type": "string"
                },
                "series": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PriceSeries"
                    }
                }
            }
        },
        "models.PriceRequest": {
            "type": "object",
            "properties": {
                "compare_to_last_year": {
                    "description": "CompareToLastYear is allowed to equal to \"0\" and \"1\"",
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ],
                    "example": 0
                },
                "endtime": {
                    "description": "EndDate has to be in this format \"YYYY-MM-DD\"",
                    "type": "string",
                    "example": "2024-12-31"
                },
                "group": {
                    "type": "string",
                    "enum": [
                        "hour",
                        "day",
                        "week",
                        "month",
                        "year"
                    ],
                    "example": "hour"
                },
                "starttime": {
                    "description": "StartDate has to be in this format \"YYYY-MM-DD\"",
                    "type": "string",
                    "example": "2024-12-11"
                }
            }
        },
        "models.PriceResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.PriceData"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.PriceSeries": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Data"
                    }
                },
                "name": {
                    "description": "unit of electric price",
                    "type": "string",
                    "example": "c/kWh"
                }
            }
        },
        "models.PriceSettings": {
            "type": "object",
            "properties": {
                "margin": {
                    "description": "amount of margin applied to price stats",
                    "type": "number",
                    "example": 0.59
                },
                "user_id": {
                    "description": "id of the user",
                    "type": "string",
                    "example": "123456789"
                },
                "vat_included": {
                    "description": "indicates whether tax is included to price stats or not",
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.TodayTomorrowPrice": {
            "type": "object",
            "properties": {
                "today": {
                    "$ref": "#/definitions/models.DailyPrice"
                },
                "tomorrow": {
                    "$ref": "#/definitions/models.DailyPrice"
                }
            }
        }
    }
}